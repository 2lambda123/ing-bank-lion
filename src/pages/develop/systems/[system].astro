---
import { getCollection } from "astro:content";
import MainLayout from "../../../layouts/MainLayout.astro";
import ComponentLayout from "../../../layouts/partials/ComponentPartial.astro";

export async function getStaticPaths() {
  const compEntries = await getCollection("component");
  return compEntries.map((entry) => ({
    params: { component: entry.data.name },
    props: { entry },
  }));
}

const demoEntries = await getCollection("demo");
const currentComponentData = Astro.props.entry.data;

const demos = demoEntries.filter(
  (entry) => entry.data.component === currentComponentData.name
);

const demosForCurrentComponent = [];

for (const demo of demos) {
  const demoWithContent = {
    ...demo,
    _rendered: await demo.render(),
  };
  demosForCurrentComponent.push(demoWithContent);
}

// 1. add description
// 2. add modifier/configurator demo
// 3. add api table:
//   - slots
//   - props/attrs
//   - events
//   - methods
//   - parts
// 4. examples (link api table as well)
// 5. extensions
// 6. rationale
// 7. component context (fit in architecture/relationship to other components and systems)
// 8. resources

const { entry, frontmatter } = Astro.props;
// const { Content } = await entry.render();
---

<MainLayout title={entry.slug}>
  <ComponentLayout frontmatter={entry.data}>
    <h1>{currentComponentData.name}</h1>
    <p>{currentComponentData.description}</p>

    {
      demosForCurrentComponent.map((demo) => (
        <article>
          <h2>{demo.data.title}</h2>
          <p>{demo.data.description}</p>
          <demo._rendered.Content />
        </article>
      ))
    }
  </ComponentLayout>
</MainLayout>
