---
import * as path from 'path';
import { componentInfoEntries, getComponentEntries } from '../../content';
import MainLayout from "../../layouts/MainLayout.astro";
import ComponentLayout from "../../layouts/partials/ComponentPartial.astro";
import { UIPortalInpageNav } from "../../components/ui-portal-inpage-nav.js";

export async function getStaticPaths() {
  return componentInfoEntries.map((entry) => ({    
    params: { 
      component: entry.data.component     
    },
    props: { entry }
  }));
}

const { entry } = Astro.props;
const componentEntries = getComponentEntries(entry.data.component);
const inPageNavData = [];
const contents = [];

const convertHeadingsToInPageNavData = (headings, componentEntry) => {
  return headings.map(header => ({
      name: header.text,
      url: `/${path.dirname(componentEntry.slug)}#${header.slug}`
    }));
};

const parseEntries = async () => {
  for (const componentEntry of componentEntries) {
    const { Content, headings } = await componentEntry.render();
    contents.push({Content});
    const headersH2 = headings.filter(header => header.depth === 2);
    const entryInPageNavData = convertHeadingsToInPageNavData(headersH2, componentEntry)[0];
    const headersH3 = headings.filter(header => header.depth === 3);
    entryInPageNavData.children = convertHeadingsToInPageNavData(headersH3, componentEntry);
    inPageNavData.push(entryInPageNavData);
  }
};

await parseEntries();

const getPathMdjsStroriesFile = (entry) => {
  const mdjsStroriesFileDirectory = path.dirname(entry.slug);
  return `/docs/${mdjsStroriesFileDirectory}/__mdjs-stories.js`;
} 
---

<MainLayout title={entry.slug}>
  <ComponentLayout frontmatter={entry.data}>
    <UIPortalInpageNav nav-data={JSON.stringify(inPageNavData)} />
    {
      contents.map((content) => (        
          <content.Content />        
      ))
    }
    <script is:inline src="/docs/_assets/scoped-custom-element-registry.min.js"></script>
    <script is:inline type="module" src={getPathMdjsStroriesFile(componentEntries[0])} mdjs-setup></script>
  </ComponentLayout>
</MainLayout>
  